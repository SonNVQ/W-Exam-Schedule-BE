# docker-compose.yml
# https://docs.docker.com/compose/compose-file/compose-file-v3/
version: "3.8"
services:
  exam-schedule:
    container_name: example-schedule
    build: .
    ports: 
      - 5000:5000
    environment:
      - TZ=Asia/Bangkok
    depends_on:
      - mssql

  mssql:
    container_name: mssql2019
    build:
      context: ./docker-services/mssql
      dockerfile: Dockerfile
    ports:
      - 1444:1433
    volumes:
      - mssql_data:/var/opt/mssql/data
      - mssql_log:/var/opt/mssql/log
      - mssql_backup:/var/opt/mssql/backup
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#environment
    environment:
      # List of all SQL Server environment variables:
      # https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables?view=sql-server-ver15#environment-variables
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - MSSQL_SA_PASSWORD=n7R2W2MvYazVppUa
      - MSSQL_DATA_DIR=/var/opt/mssql/data
      - MSSQL_LOG_DIR=/var/opt/mssql/log
      - MSSQL_BACKUP_DIR=/var/opt/mssql/backup
      - TZ=Asia/Bangkok

  # webserver:
  #   build:
  #     context: ./docker-services/nginx
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - 80:80
  #     - 443:443
  #   environment:
  #     - TZ=Asia/Bangkok
  #   depends_on:
  #     - exam-schedule

# Create name volumes managed by Docker to not lose data when remove a container.
# https://docs.docker.com/compose/compose-file/compose-file-v3/#volumes
volumes:
  mssql_data:
  mssql_log:
  mssql_backup: